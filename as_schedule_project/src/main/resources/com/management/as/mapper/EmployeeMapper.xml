<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.management.as.mapper.EmployeeMapper">
	<select id="getSchedule"
		resultType="com.management.as.domain.ScheduleVO">
		select c.cnum, username, address, u.detail, visitdate,
		visittime, prostatus, star, comment
		from user u join
		customer c on u.uid=c.uid
		where
		c.eno=#{eno}
	</select>
	
	<select id="getASSchedule"
		resultType="com.management.as.domain.ScheduleVO">
		select c.cnum, c.visitdate, c.visittime, c.prostatus, c.eno, e.ename
		from customer c join
		employee e on c.eno = e.eno 
		where c.prostatus in ('P','F')
	</select>

	<select id="selectAll"
		resultType="com.management.as.domain.EmployeeVO">
		select * from employee
	</select>

	<insert id="insert"
		parameterType="com.management.as.domain.EmployeeVO">
		insert into employee(eno, password, ename, ephone,
		hiredate, position)
		values(#{eno}, #{password}, #{ename}, #{ephone},
		#{hiredate},
		#{position})
	</insert>

	<select id="selectByKeyword" parameterType="map"
		resultType="com.management.as.domain.EmployeeVO">
		SELECT * FROM employee
		<where>
			<if test="type == 'ename'">
				ename LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="type == 'eno'">
				eno LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="type == 'position'">
				position LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</where>
	</select>

	<select id="getPagedListWithSearch" parameterType="map"
		resultType="com.management.as.domain.EmployeeVO">
		select * from employee
		<where>
			<if test="type == 'ename'">
				ename like concat('%', #{keyword}, '%')
			</if>
			<if test="type == 'eno'">
				eno like concat('%', #{keyword}, '%')
			</if>
			<if test="type == 'position'">
				position like concat('%', #{keyword}, '%')
			</if>
		</where>
		order by eno
		limit #{offset}, #{size}
	</select>

	<select id="getTotalCount" parameterType="map" resultType="int">
		select count(*) FROM employee
		<where>
			<if test="type == 'ename'">
				ename like concat ('%', #{keyword}, '%')
			</if>
			<if test="type == 'eno'">
				eno like concat('%', #{keyword}, '%')
			</if>
			<if test="type == 'position'">
				position like concat ('%', #{keyword}, '%')
			</if>
		</where>
	</select>

	<select id="findById"
		resultType="com.management.as.domain.EmployeeVO"
		parameterType="String">
		select * from employee where eno = #{eno}
	</select>

	<select id="idCheck" resultType="int">
		SELECT COUNT(*) FROM employee
		WHERE eno = #{id}
	</select>


	<select id="getEngineerList"
		resultType="com.management.as.domain.EmployeeVO">
		SELECT
		eno,
		ename,
		position,
		ephone,
		hiredate
		FROM employee
	</select>

	<!-- 기사 배정 처리 -->
	<update id="assignEngineer">
		UPDATE customer
		SET eno = #{engineerNo} , prostatus =
		#{status}
		WHERE cnum = #{receiptNo}
	</update>

	<!-- 처리 상태 변경 <update id="updateProStatus"> UPDATE customer SET prostatus 
		= #{status} WHERE cnum = #{receiptNo} </update> -->

	<!-- 기사 가능한 시간대 체크 -->
	<select id="assignCountCheck" resultType="int">
		SELECT COUNT(*) FROM
		customer
		WHERE eno = #{selectedEngineer} AND visitdate = #{visitdate}
		AND visittime
		= #{visittime}
	</select>

	<select id="getEmployeeById"
		resultType="com.management.as.domain.EmployeeVO"
		parameterType="String">
		select * from employee where eno = #{eno}
		
	</select>

	<select id="selectCustomersByEmployeeId" parameterType="String"
		resultType="com.management.as.domain.CustomerVO">
		SELECT
		c.cnum,
		c.uid,
		c.model,
		c.issue,
		c.visitdate,
		c.visitend,
		c.prostatus,
		c.star,
		c.proname,
		c.visittime,
		c.comment,
		u.user_id,
		u.username,
		u.phone,
		u.detail AS user_detail
		FROM customer c
		JOIN user u
		ON c.uid = u.uid
		WHERE c.eno = #{eno}
	</select>


	<select id="searchCustomers"
		resultType="com.management.as.domain.CustomerVO">
		SELECT * FROM customer
		<where>
			<if test="username != null and username != ''">
				AND username LIKE CONCAT('%', #{username}, '%')
			</if>
			<if test="issue != null and issue != ''">
				AND issue LIKE CONCAT('%', #{issue}, '%')
			</if>
			<if test="proname != null and proname != ''">
				AND proname LIKE CONCAT('%', #{proname}, '%')
			</if>
		</where>
	</select>

	<!-- 검색 폼 -->
	<select id="searchByEmployeeAndField"
        resultType="com.management.as.domain.CustomerVO"
        parameterType="map">
    SELECT c.*, u.username
    FROM customer c
    JOIN user u ON c.uid = u.uid
    <where>
        <if test="eno != null and eno != ''">
            c.eno = #{eno}
        </if>
        <choose>
            <when test="searchField == 'proname'">
                AND c.proname LIKE CONCAT('%', #{keyword}, '%')
            </when>
            <when test="searchField == 'issue'">
                AND c.issue LIKE CONCAT('%', #{keyword}, '%')
            </when>
            <when test="searchField == 'username'">
                AND u.username LIKE CONCAT('%', #{keyword}, '%')
            </when>
        </choose>
    </where>
</select>







</mapper>